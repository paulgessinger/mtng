[
  {
    "title": "refactor: Consistent surface tolerance for propagation",
    "user": {
      "login": "andiwand",
      "html_url": "https://github.com/andiwand"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "automerge"
      },
      {
        "name": "Track Finding"
      },
      {
        "name": "Track Fitting"
      },
      {
        "name": "Changes Performance"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2292",
    "number": 2292,
    "assignee": null,
    "body": "In #2142 I discovered that the ridders propagator depends highly on the step size taken. At the same time we still use the global static surface tolerance in most of the places which I try to improve here. This allows us to consistently set the surface tolerance for the propagation and to improve the accuracy of the ridders propagator.\r\n\r\nIncludes a bug fix for `AtlasStepper` I discovered after making these changes. The stepper ignored the stepping tolerance in backward mode.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2292",
    "updated_at": "2023-07-12T09:11:19+00:00",
    "created_at": "2023-07-10T19:35:58+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "APPROVED",
        "body": "Excellent job, great improvement.",
        "submitted_at": "2023-07-12T09:10:36+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "feat: detector python infrastructure",
    "user": {
      "login": "asalzburger",
      "html_url": "https://github.com/asalzburger"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Examples"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2288",
    "number": 2288,
    "assignee": null,
    "body": "This PR adds some python convenience functions that allow you to build the ODD from an exported `GeometryHierarchyMap<Surface>` to json.\r\n\r\nThe classes in `detector.py` have also proven to allow building an ATLAS ITk version, which will be added shortly.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2288",
    "updated_at": "2023-07-12T09:29:30+00:00",
    "created_at": "2023-07-08T11:32:08+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "noemina",
          "html_url": "https://github.com/noemina"
        },
        "state": "COMMENTED",
        "body": "Looks good to me. I have a few comments.",
        "submitted_at": "2023-07-10T14:15:32+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-12T07:18:02+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-12T07:18:18+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-12T07:18:25+00:00"
      },
      {
        "user": {
          "login": "noemina",
          "html_url": "https://github.com/noemina"
        },
        "state": "DISMISSED",
        "body": "All good!",
        "submitted_at": "2023-07-12T08:03:06+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "fix: Align `globalToLocal` and `intersection` in `LineSurface`",
    "user": {
      "login": "andiwand",
      "html_url": "https://github.com/andiwand"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Infrastructure"
      },
      {
        "name": "Impact - Minor"
      },
      {
        "name": "automerge"
      },
      {
        "name": "Changes Performance"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2287",
    "number": 2287,
    "assignee": null,
    "body": "This is supposed to be a proper fix after the quick fix in https://github.com/acts-project/acts/pull/2239\r\n\r\nIn `globalToLocal` we did not respect the direction which is important for the line surface.\r\n\r\nI tried to make the code a little more clear and move away from constructor initialization in the mathy part. I also added a unit test to check the intersection against the propagation.\r\n\r\nI will let the CI judge how much this breaks",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2287",
    "updated_at": "2023-07-12T09:18:29+00:00",
    "created_at": "2023-07-08T09:24:44+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T11:59:06+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "thanks for the review @felix-russo  !",
        "submitted_at": "2023-07-11T12:14:28+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T15:43:49+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T16:14:49+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T17:12:04+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T17:13:39+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-12T06:18:57+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "DISMISSED",
        "body": "",
        "submitted_at": "2023-07-12T07:29:41+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "feat: adding json writing, reading infrastructure",
    "user": {
      "login": "asalzburger",
      "html_url": "https://github.com/asalzburger"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Component - Plugins"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2283",
    "number": 2283,
    "assignee": null,
    "body": "This PR adds the reading/writing infrastructure of the new `Experimental` detector feature to and from json.\r\n\r\nAt the same time it streamlines how we use the `json::nlohmann` module:\r\n\r\n- As we need polymorphism, the intrinsic `to_json` and `from_json` nomenclature that would allow auto-translation is practically unusable for the `Detector`. Hence it is replaced by a consistent `ObjectJsonConverter::toJson` and `ObjectJsonConverter::fromJson` naming scheme.\r\n- It changes enum types from hand-written string writing to the `nlohmann::enum` handling macro consistently\r\n- It introduces nested `Options` struct for future refinement of json writing \r\n- It adds a dedicated `detray` writing mode for conversion into detray formal",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2283",
    "updated_at": "2023-07-12T09:02:42+00:00",
    "created_at": "2023-07-06T15:14:45+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T06:46:03+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T07:17:14+00:00"
      },
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T07:24:02+00:00"
      },
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T07:24:53+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T07:36:57+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T07:59:28+00:00"
      },
      {
        "user": {
          "login": "niermann999",
          "html_url": "https://github.com/niermann999"
        },
        "state": "COMMENTED",
        "body": "to be continued",
        "submitted_at": "2023-07-07T14:19:38+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:34:58+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:35:18+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:36:22+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:38:03+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:41:35+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:42:03+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:43:10+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:44:13+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-08T11:48:14+00:00"
      },
      {
        "user": {
          "login": "niermann999",
          "html_url": "https://github.com/niermann999"
        },
        "state": "COMMENTED",
        "body": "I am wondering if the detray implementation should go into its own file, at least for the tests, so that detray conversion bugs don't fail the general tests?",
        "submitted_at": "2023-07-10T16:05:02+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor!: move useBeamSpotConstraint to vertexingOptions",
    "user": {
      "login": "felix-russo",
      "html_url": "https://github.com/felix-russo"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Infrastructure"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Component - Documentation"
      },
      {
        "name": "Vertexing"
      },
      {
        "name": "Breaking change"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2272",
    "number": 2272,
    "assignee": null,
    "body": "Previously, the boolean member variable `useBeamSpotConstraint` of the AMVF and IVF was set independently of the actual beam spot constraint which was part of the `vertexingOptions`. This PR moves `useBeamSpotConstraint` to `vertexingOptions` as well.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2272",
    "updated_at": "2023-07-06T08:52:05+00:00",
    "created_at": "2023-07-05T09:49:19+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [],
    "draft": false
  },
  {
    "title": "refactor!: Rename `Single*TrackParameters` to `Generic*TrackParameters`",
    "user": {
      "login": "andiwand",
      "html_url": "https://github.com/andiwand"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Fatras"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Component - Plugins"
      },
      {
        "name": "Component - Documentation"
      },
      {
        "name": "Event Data Model"
      },
      {
        "name": "SP formation"
      },
      {
        "name": "Vertexing"
      },
      {
        "name": "Seeding"
      },
      {
        "name": "Track Finding"
      },
      {
        "name": "Track Fitting"
      },
      {
        "name": "Breaking change"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2269",
    "number": 2269,
    "assignee": null,
    "body": "I am unhappy with the name `Single*TrackParameters` as it could refer to singly charged or single track. The track actually supports different kinds of charge hypothesis so I thought `Generic*TrackParameter` might fit better.\r\n\r\nI also merged `NeutralTrackParameters` into `TrackParameters` and removed the external template instantiation as it could be a performance hit because it disables inlining.\r\n\r\nPulled these changes out of https://github.com/acts-project/acts/pull/2181",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2269",
    "updated_at": "2023-07-05T19:25:35+00:00",
    "created_at": "2023-07-04T09:35:30+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "asalzburger",
        "html_url": "https://github.com/asalzburger"
      }
    ],
    "reviews": [],
    "draft": false
  },
  {
    "title": "feat: Introduce particle hypothesis",
    "user": {
      "login": "andiwand",
      "html_url": "https://github.com/andiwand"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Event Data Model"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2254",
    "number": 2254,
    "assignee": null,
    "body": "In this PR I introduce the concept of a particle hypothesis which will later be used by the track parameters.\r\n\r\nI also refactored the Charge interface a bit. This is the foundation for upcoming refactor PRs for the particle hypothesis.\r\n\r\nPulled out from https://github.com/acts-project/acts/pull/2181.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2254",
    "updated_at": "2023-07-10T09:06:10+00:00",
    "created_at": "2023-06-30T09:34:06+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "asalzburger",
        "html_url": "https://github.com/asalzburger"
      },
      {
        "login": "benjaminhuth",
        "html_url": "https://github.com/benjaminhuth"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T07:37:49+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T08:34:50+00:00"
      },
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T08:53:12+00:00"
      },
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T13:07:17+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "perf: Add option of stereo angle when building telescope detector",
    "user": {
      "login": "XiaocongAi",
      "html_url": "https://github.com/XiaocongAi"
    },
    "labels": [
      {
        "name": "Component - Examples"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2240",
    "number": 2240,
    "assignee": null,
    "body": "This PR add options for stereo angles of each telescope plane when building the telescope detector, which is helpful in case that the telescope planes are strip detectors with stereo angles.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2240",
    "updated_at": "2023-06-23T14:28:52+00:00",
    "created_at": "2023-06-23T13:43:30+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "Looks good",
        "submitted_at": "2023-06-23T14:00:20+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "perf: write unbiased residual for each track state",
    "user": {
      "login": "XiaocongAi",
      "html_url": "https://github.com/XiaocongAi"
    },
    "labels": [
      {
        "name": "Component - Examples"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2238",
    "number": 2238,
    "assignee": null,
    "body": "This PR calculates the unbiased residual for track state using smoothed track parameters and measurement according to Eq.(12a)-Eq.(12c) in NIMA 262, 444, which can be used to validate the performance of alignment algorithm. This is implemented in the `RootTrajectoryStatesWriter` instead of a functionality in the `Core` as all the ingredients for the calculation are available in the `KalmanFiltterResult`. \r\n\r\nThis does not change any public API as defined in `docs/versioning.rst`.\r\n\r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2238",
    "updated_at": "2023-06-23T12:34:22+00:00",
    "created_at": "2023-06-23T08:58:40+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "AJPfleger",
          "html_url": "https://github.com/AJPfleger"
        },
        "state": "APPROVED",
        "body": "lgtm!\r\nMaybe you can change the (c) in line 3 of both files to `2019-2023",
        "submitted_at": "2023-06-23T09:17:49+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor: Indexed surfaces generator ",
    "user": {
      "login": "dimitra97",
      "html_url": "https://github.com/dimitra97"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Component - Plugins"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2234",
    "number": 2234,
    "assignee": null,
    "body": "This PR mainly changes the `IndexedSurfacesGenerator.hpp ` in order to accept other types of Navigation Delegates for the indexed surfaces, by providing a template class to the struct. ",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2234",
    "updated_at": "2023-07-06T17:39:50+00:00",
    "created_at": "2023-06-22T11:49:32+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "AJPfleger",
        "html_url": "https://github.com/AJPfleger"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "AJPfleger",
          "html_url": "https://github.com/AJPfleger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-22T15:36:43+00:00"
      },
      {
        "user": {
          "login": "dimitra97",
          "html_url": "https://github.com/dimitra97"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-23T08:33:55+00:00"
      },
      {
        "user": {
          "login": "dimitra97",
          "html_url": "https://github.com/dimitra97"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-23T09:11:15+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "APPROVED",
        "body": "",
        "submitted_at": "2023-07-06T08:04:56+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "feat: actsvg plugin for new detector infrastructure (cylindrical)",
    "user": {
      "login": "asalzburger",
      "html_url": "https://github.com/asalzburger"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Improvement"
      },
      {
        "name": "Component - Plugins"
      },
      {
        "name": ":construction_worker_woman: User Action Needed"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2228",
    "number": 2228,
    "assignee": null,
    "body": "This PR includes the necessary `ActSVG` converters for the for `Portal`, `DetectorVolume` and `Detector`. It currently is pretty much restricted to a cylindrical setup, but can be easily augmented to also include a cubic detector setup.\r\n\r\n`Portal` display includes (optionally coloured) arrows that point to the volume in question:\r\n \r\n![Screenshot 2023-06-21 at 13 22 16](https://github.com/acts-project/acts/assets/26623879/0356fa04-cbb7-4192-872c-6b3f7226aa8e)\r\n\r\n`DetectorVolume` display includes contained surfaces (and grid structure if given(\r\n\r\n![Screenshot 2023-06-21 at 13 21 47](https://github.com/acts-project/acts/assets/26623879/37025bcf-6ef4-4424-8d37-310e609024b7)\r\n\r\n`Detector` display puts this all together:\r\n\r\n![Screenshot 2023-06-21 at 13 21 32](https://github.com/acts-project/acts/assets/26623879/edc7f188-10b9-4890-ae13-3ca717bd7b34)\r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2228",
    "updated_at": "2023-06-30T08:37:16+00:00",
    "created_at": "2023-06-21T11:26:58+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-21T11:30:56+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "APPROVED",
        "body": "left a few comments but looks already pretty good\r\n\r\nthis will conflict with https://github.com/acts-project/acts/pull/2214 so I need to catch up when this is merged",
        "submitted_at": "2023-06-28T06:42:40+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "ci: Add track momenta to physmon",
    "user": {
      "login": "felix-russo",
      "html_url": "https://github.com/felix-russo"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Infrastructure"
      },
      {
        "name": "Component - Examples"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2221",
    "number": 2221,
    "assignee": null,
    "body": "Comparing the reconstructed momenta to their truth values in the physics monitoring. Both the momenta before and after the vertex fit are considered.",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2221",
    "updated_at": "2023-07-03T16:55:00+00:00",
    "created_at": "2023-06-19T16:32:20+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "paulgessinger",
        "html_url": "https://github.com/paulgessinger"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-29T07:15:19+00:00"
      },
      {
        "user": {
          "login": "paulgessinger",
          "html_url": "https://github.com/paulgessinger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-29T07:54:36+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-29T08:08:16+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-29T08:58:07+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor: revisit FullBilloirVertexFitter",
    "user": {
      "login": "felix-russo",
      "html_url": "https://github.com/felix-russo"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Impact - Minor"
      },
      {
        "name": "Vertexing"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2196",
    "number": 2196,
    "assignee": null,
    "body": "In this PR we improve the `FullBilloirVertexFitter`.  We resolve issue #2246 and add time to the unit test. In addition, variable names are changed to match the reference, comments improved, and bits of code rewritten.\r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2196",
    "updated_at": "2023-07-12T08:24:39+00:00",
    "created_at": "2023-06-12T13:49:13+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "niermann999",
          "html_url": "https://github.com/niermann999"
        },
        "state": "COMMENTED",
        "body": "Looks good to me in general",
        "submitted_at": "2023-07-11T13:44:17+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T16:37:09+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor: Adding time to HelicalTrackLinearizer",
    "user": {
      "login": "felix-russo",
      "html_url": "https://github.com/felix-russo"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Vertexing"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2179",
    "number": 2179,
    "assignee": null,
    "body": "In this PR the derivatives of/wrt time are added to the Jacobians computed in `HelicalTrackLinearizer`. The terms have been checked by comparing them to numerically computed derivatives (see PR #2141).\r\n\r\nHere is a PDF where the Jacobians are derived: [Track_Linearization.pdf](https://github.com/acts-project/acts/files/11664828/Track_Linearization.pdf). \r\nNote that nobody (except me) read this yet, so it might have some mistakes in it. Any feedback is more than welcome!\r\n\r\n\r\nSomething that might need discussion: To compute the new terms, we need to have a mass and a charge hypothesis of the tracks. Right now, Pion mass and unit charge are assumed in the code, but it might be worth adding specific hypotheses to the track objects. ",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2179",
    "updated_at": "2023-07-11T17:09:44+00:00",
    "created_at": "2023-06-06T07:19:15+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "pbutti",
        "html_url": "https://github.com/pbutti"
      },
      {
        "login": "AJPfleger",
        "html_url": "https://github.com/AJPfleger"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-06T07:31:06+00:00"
      },
      {
        "user": {
          "login": "AJPfleger",
          "html_url": "https://github.com/AJPfleger"
        },
        "state": "CHANGES_REQUESTED",
        "body": "Could it make sense to add the derivation on overleaf as some screenshots to the PR description?",
        "submitted_at": "2023-06-06T12:15:21+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-06T12:36:19+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-06T12:40:42+00:00"
      },
      {
        "user": {
          "login": "AJPfleger",
          "html_url": "https://github.com/AJPfleger"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-06T12:42:10+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-12T12:32:23+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-12T12:34:42+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-12T12:45:43+00:00"
      },
      {
        "user": {
          "login": "pbutti",
          "html_url": "https://github.com/pbutti"
        },
        "state": "APPROVED",
        "body": "",
        "submitted_at": "2023-06-15T13:18:31+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "left a few comments\r\n\r\nI am not sure what the process is to check these changes against Athena physics. I think we have to wait until next week and for the next major release to get this in",
        "submitted_at": "2023-07-10T08:32:20+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-10T16:04:25+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-10T18:51:16+00:00"
      },
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-11T07:16:02+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor: Consistent naming of measurment_id and writer-reader-roundtrip",
    "user": {
      "login": "benjaminhuth",
      "html_url": "https://github.com/benjaminhuth"
    },
    "labels": [
      {
        "name": "Component - Examples"
      },
      {
        "name": ":construction_worker_woman: User Action Needed"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2103",
    "number": 2103,
    "assignee": null,
    "body": "**!! This breaks the examples file standards !!**\r\n\r\nThere exists a `hit_id`, which I in the context of the simhit-writer refers to the id of the simulated hit . Additionally to this, there are measurements, which is not a one-to-one mapping. \r\nTherefore I would argue we should consistently use the term `measurment_id` when refering to these measurments.\r\n\r\nFurthermore, this adds a roundtrip-test for the Csv measurment reader/writers. It also provides some generic crazy template stuff which hopefully allows to write round-trip tests in a easy way.\r\n\r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2103",
    "updated_at": "2023-07-07T13:39:50+00:00",
    "created_at": "2023-05-06T10:55:49+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "andiwand",
        "html_url": "https://github.com/andiwand"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "DISMISSED",
        "body": "",
        "submitted_at": "2023-05-06T15:16:41+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "fix: Improve full chain pulls towards standard normal distribution",
    "user": {
      "login": "andiwand",
      "html_url": "https://github.com/andiwand"
    },
    "labels": [
      {
        "name": "Infrastructure"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Changes Performance"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2086",
    "number": 2086,
    "assignee": null,
    "body": "Our full chain pulls are in a bad state. Looks like the reconstruction and simulation energy loss did not match up. This PR switches the Fatras interactions on which should bring our pulls back to standard normal distribution.\r\n\r\nFixes\r\n- https://github.com/acts-project/acts/issues/1643\r\n\r\nBlocked by\r\n- https://github.com/acts-project/acts/pull/2157\r\n- https://github.com/acts-project/acts/pull/2239\r\n- https://github.com/acts-project/acts/pull/2295\r\n- https://github.com/acts-project/acts/pull/2293\r\n- https://github.com/acts-project/acts/pull/2294",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2086",
    "updated_at": "2023-07-12T07:46:06+00:00",
    "created_at": "2023-05-04T13:14:36+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "paulgessinger",
        "html_url": "https://github.com/paulgessinger"
      },
      {
        "login": "pbutti",
        "html_url": "https://github.com/pbutti"
      },
      {
        "login": "asalzburger",
        "html_url": "https://github.com/asalzburger"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "pbutti",
          "html_url": "https://github.com/pbutti"
        },
        "state": "APPROVED",
        "body": "",
        "submitted_at": "2023-05-22T08:36:49+00:00"
      },
      {
        "user": {
          "login": "pbutti",
          "html_url": "https://github.com/pbutti"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-05-22T09:09:30+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-05-22T15:44:36+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-05-22T15:45:17+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-05-22T15:47:06+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-05-22T15:48:34+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-02T07:21:09+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T06:19:43+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-22T09:22:07+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-22T09:43:03+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-23T06:54:05+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-10T07:24:38+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "feat: Seed Vertex Finder",
    "user": {
      "login": "pbalek",
      "html_url": "https://github.com/pbalek"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Vertexing"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2038",
    "number": 2038,
    "assignee": null,
    "body": "This PR adds an algorithm for fast vertex estimation, `SeedVertexFinder`. I can be used when a single vertex is present in the event. It uses spacepoints as its input and can thus run before track reconstruction.\r\n\r\nThe spacepoints are sorted based on their distance from Z-axis to `near`, `middle`, and `far` classes. All possible triplets are attempted to be created, one spacepoint from each class; only those that are reasonably straight and point nearby Z-axis are kept.\r\n\r\nThe vertex estimation has two modes:\r\n1. Minimalization with respect to \"planes\"\r\n   * The three spacepoints define a plane. A distance from the plane to a point (=vertex) is calculated. The sum of squares of the distances should be minimal. \r\n2. Minimalization with respect to \"rays\"\r\n   * The three spacepoint are fitted with a straight line (=ray). A distance from the ray to a point (=vertex) is calculated. The sum of squares of the distances should be minimal. \r\n\r\n`SeedVertexFinderAlgorithm` implements the `SeedVertexFinder` and run it in both modes. Found vertices are saved by `RootSeedVertexPerformanceWriter`.\r\n\r\nRelated to issue #1778. Tagging @tboldagh \r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2038",
    "updated_at": "2023-06-29T07:20:06+00:00",
    "created_at": "2023-04-17T18:53:40+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "thank you for your contribution @pbalek !\r\n\r\nI did not check the algorithm but left a few comments concerning the code",
        "submitted_at": "2023-06-17T13:22:10+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:16:41+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:18:51+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:19:22+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:19:47+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:28:45+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:29:54+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:30:52+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T10:32:52+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T11:56:18+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T12:07:07+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T12:32:32+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T12:39:37+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T12:50:39+00:00"
      },
      {
        "user": {
          "login": "asalzburger",
          "html_url": "https://github.com/asalzburger"
        },
        "state": "CHANGES_REQUESTED",
        "body": "Can we also add UnitTests for this, please?",
        "submitted_at": "2023-06-20T13:30:35+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T14:03:22+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T14:26:12+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:07:26+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:15:20+00:00"
      },
      {
        "user": {
          "login": "andiwand",
          "html_url": "https://github.com/andiwand"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:30:14+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:38:29+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:48:57+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:50:10+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T16:55:23+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T19:13:48+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T19:15:16+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-20T19:24:48+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-21T10:11:59+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-21T10:38:55+00:00"
      },
      {
        "user": {
          "login": "pbalek",
          "html_url": "https://github.com/pbalek"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-06-21T14:58:19+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "refactor: change the definition of the rotation parameters",
    "user": {
      "login": "XiaocongAi",
      "html_url": "https://github.com/XiaocongAi"
    },
    "labels": [
      {
        "name": "Component - Core"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2021",
    "number": 2021,
    "assignee": {
      "login": "pbutti",
      "html_url": "https://github.com/pbutti"
    },
    "body": "This PR includes the following changes:\r\n1) Change the definition of the rotation parameters to be around local axes\r\n2) Extend the `AlignmentHelper` to get derivative of the surface local axes w.r..t rotation of a (mother) composite object",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2021",
    "updated_at": "2023-06-23T12:41:00+00:00",
    "created_at": "2023-04-08T08:06:09+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "pbutti",
        "html_url": "https://github.com/pbutti"
      }
    ],
    "reviews": [],
    "draft": false
  },
  {
    "title": "feat: Addition of CsvSeedWriter",
    "user": {
      "login": "piotrmoszkowicz",
      "html_url": "https://github.com/piotrmoszkowicz"
    },
    "labels": [
      {
        "name": "Component - Examples"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/2003",
    "number": 2003,
    "assignee": null,
    "body": "Hello experts,\r\nAs part of this PR I am willing to add `CsvSeedWriter`, which you can use to save generated seeds in `.csv` format.\r\nThis is my first contribution, so bear with me ;)\r\n\r\ncc: @tboldagh \r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/2003",
    "updated_at": "2023-06-20T15:54:55+00:00",
    "created_at": "2023-03-30T08:41:29+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [],
    "reviews": [
      {
        "user": {
          "login": "felix-russo",
          "html_url": "https://github.com/felix-russo"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-04-11T15:56:04+00:00"
      },
      {
        "user": {
          "login": "niermann999",
          "html_url": "https://github.com/niermann999"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-04-14T15:40:05+00:00"
      }
    ],
    "draft": false
  },
  {
    "title": "feat!: Space point implementation",
    "user": {
      "login": "CarloVarni",
      "html_url": "https://github.com/CarloVarni"
    },
    "labels": [
      {
        "name": "Component - Core"
      },
      {
        "name": "Needs Decision"
      },
      {
        "name": "Component - Examples"
      },
      {
        "name": "Component - Plugins"
      },
      {
        "name": "Component - Documentation"
      },
      {
        "name": ":stop_sign: blocked"
      },
      {
        "name": "Event Data Model"
      },
      {
        "name": "Needs Discussion"
      },
      {
        "name": "Seeding"
      },
      {
        "name": "Track Finding"
      },
      {
        "name": "Breaking change"
      }
    ],
    "html_url": "https://github.com/acts-project/acts/pull/1900",
    "number": 1900,
    "assignee": null,
    "body": "Read-only implementation of the space point EDM, following the examples from Tracks and MTJ. The seeding infrastructures  have been adapted to this, both the default and orthogonal seeding.\r\n\r\nThis also removed the following classes: `InternalSpacePoint` and `InternalSeed`\r\n",
    "url": "https://api.github.com/repos/acts-project/acts/pulls/1900",
    "updated_at": "2023-07-07T14:04:58+00:00",
    "created_at": "2023-02-27T20:04:23+00:00",
    "closed_at": null,
    "is_wip": false,
    "is_stale": false,
    "requested_reviewers": [
      {
        "login": "paulgessinger",
        "html_url": "https://github.com/paulgessinger"
      }
    ],
    "reviews": [
      {
        "user": {
          "login": "tboldagh",
          "html_url": "https://github.com/tboldagh"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-01T08:25:23+00:00"
      },
      {
        "user": {
          "login": "tboldagh",
          "html_url": "https://github.com/tboldagh"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-01T08:34:05+00:00"
      },
      {
        "user": {
          "login": "tboldagh",
          "html_url": "https://github.com/tboldagh"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-01T08:35:29+00:00"
      },
      {
        "user": {
          "login": "tboldagh",
          "html_url": "https://github.com/tboldagh"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-01T08:35:50+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-24T09:27:25+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-24T09:28:48+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-24T09:28:58+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-03-24T09:29:04+00:00"
      },
      {
        "user": {
          "login": "tboldagh",
          "html_url": "https://github.com/tboldagh"
        },
        "state": "CHANGES_REQUESTED",
        "body": "Hi Carlo, these changes are realy extensive. I had not looked into algorithms section at all. \r\nI'll be more or less offline the next week so feel free to close items that you think can be addressed later.",
        "submitted_at": "2023-06-30T13:33:11+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-03T13:40:55+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-03T13:42:00+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-03T13:44:08+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-03T13:44:57+00:00"
      },
      {
        "user": {
          "login": "LuisFelipeCoelho",
          "html_url": "https://github.com/LuisFelipeCoelho"
        },
        "state": "COMMENTED",
        "body": "I really like the changes, I left only minor comments/questions. ",
        "submitted_at": "2023-07-06T08:55:35+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T09:15:09+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T09:15:17+00:00"
      },
      {
        "user": {
          "login": "CarloVarni",
          "html_url": "https://github.com/CarloVarni"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-06T09:15:37+00:00"
      },
      {
        "user": {
          "login": "LuisFelipeCoelho",
          "html_url": "https://github.com/LuisFelipeCoelho"
        },
        "state": "COMMENTED",
        "body": "",
        "submitted_at": "2023-07-07T14:04:57+00:00"
      }
    ],
    "draft": false
  }
]